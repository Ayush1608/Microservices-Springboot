apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2021-03-17T15:35:44Z"
  generation: 1
  labels:
    app: currency-exchange-service
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:labels:
          .: {}
          f:app: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector:
          f:matchLabels:
            .: {}
            f:app: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
          f:spec:
            f:containers:
              k:{"name":"currency-exchange-service"}:
                .: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
    manager: kubectl-create
    operation: Update
    time: "2021-03-17T15:35:44Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:availableReplicas: {}
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    time: "2021-03-17T15:35:51Z"
  name: currency-exchange-service
  namespace: default
  resourceVersion: "4871"
  selfLink: /apis/apps/v1/namespaces/default/deployments/currency-exchange-service
  uid: bae209ab-a60c-480a-b615-3f201fd00c88
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: currency-exchange-service
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: currency-exchange-service
    spec:
      containers:
      - image: ayush1608/currency-exchange-service:0.0.11-SNAPSHOT
        imagePullPolicy: IfNotPresent
        name: currency-exchange-service
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2021-03-17T15:35:51Z"
    lastUpdateTime: "2021-03-17T15:35:51Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2021-03-17T15:35:44Z"
    lastUpdateTime: "2021-03-17T15:35:51Z"
    message: ReplicaSet "currency-exchange-service-64cb64d759" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    cloud.google.com/neg: '{"ingress":true}'
  creationTimestamp: "2021-03-17T15:35:56Z"
  finalizers:
    - service.kubernetes.io/load-balancer-cleanup
  labels:
    app: currency-exchange-service
  managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
        f:spec:
          f:externalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":8000,"protocol":"TCP"}:
              .: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector:
            .: {}
            f:app: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: kubectl-expose
      operation: Update
      time: "2021-03-17T15:35:56Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:finalizers:
            .: {}
            v:"service.kubernetes.io/load-balancer-cleanup": {}
        f:status:
          f:loadBalancer:
            f:ingress: {}
      manager: kube-controller-manager
      operation: Update
      time: "2021-03-17T15:36:42Z"
  name: currency-exchange-service
  namespace: default
  resourceVersion: "5235"
  selfLink: /api/v1/namespaces/default/services/currency-exchange-service
  uid: 915d1113-cbc4-4ecd-a0b6-b8ff81846ecd
spec:
  clusterIP: 10.108.3.195
  externalTrafficPolicy: Cluster
  ports:
    - nodePort: 30193
      port: 8000
      protocol: TCP
      targetPort: 8000
  selector:
    app: currency-exchange-service
  sessionAffinity: None
  type: LoadBalancer
status:
  loadBalancer:
    ingress:
      - ip: 35.223.27.165
